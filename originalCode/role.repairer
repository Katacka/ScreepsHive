var utilRoleFunctions = require('util.roleFunctions');

module.exports = {
    /** @param {Creep} creep **/
    run: function(creep) {
	    if (creep.memory.repairing && !creep.memory.recycling && creep.carry.energy == 0) { 
            creep.memory.repairing = false;
            creep.say('Withdrawing');
	    }
	    else if (!creep.memory.repairing && creep.carry.energy == creep.carryCapacity) { 
	        creep.memory.repairing = true;
	        creep.say('Repairing');
	    } 
	    
	    if (creep.memory.repairing) { 
	        if (!utilRoleFunctions.repair(creep)){
	            creep.memory.recycling = utilRoleFunctions.recycle(creep);
                if (creep.memory.recycling && (creep.carry.energy == creep.carryCapacity)){
                    var spawn = creep.room.find(FIND_MY_SPAWNS)[0];
                    utilRoleFunctions.deposit(creep, spawn, 1, true);
                } 
	        } 
	    }
	    else {
	        var targetIdx = Memory.roleDefinitions[creep.memory.role].target;
            var target = Memory.rooms[creep.room.name].flags[targetIdx];
	        utilRoleFunctions.withdraw(creep, Game.flags[target], Game.flags[target]); 
	    }
	}
};

